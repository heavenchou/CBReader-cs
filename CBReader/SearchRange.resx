<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAAAGACoDAAAFgAAACgAAAAgAAAAQAAAAAEAGAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAA
        AAD/////////////////////////////////////////////////////////////////////////////
        ///////////////////////////////////////////////////////////d5c6nu4CgtHSgtXagtXag
        tXagtXagtXagtXagtXagtXagtXagtHWfs3Kes3Kes3KftHWgtXahtXagtXagtXagtXagtXagtXagtXag
        tHSnu37c5M3////////////f5tFujitjhxlihRhihRhihRhihRhihRhihRhihhdghBVcgQ1cgQ9jhhlr
        jCdwkC1sjilliR5egxFbgAteghJhhRhihRhihRhihRhihRhihRhjhxlsjCnc5M3///////+ouoBjhhde
        gBdegBdegBdegBdegBdegBddfxVYewtmhiSRqGS/y6Xh5tPu8ujy9Ozv8unn7N7R2r2qu4Z8l0NcfhRa
        fBBegBdegBdegBdegBdegBdjhxekuHz///////+gtXRihRhegBdegBdegBdegBdegBdZfA5jgx+itnvo
        7d/////19/Ha4crCz6mzw5SwwI66yJ7X38b6+/j8/fvM1rd+mUZYew1dfxZegBdegBdegBdihRiftXT/
        //////+htndihRhegBdegBdegBdegBdYew1+mUbZ4cn////l6tqesnVujjFcfxVTdwJWegp2kjucsHON
        pV13kjuvv43z9u/6+/ijt3xbfhBdfxVegBdegBdihRigtXb///////+htndihRhegBdegBdegBZYew2U
        qmf09vD///+0w5ZkhSJXegpafQ9ZfA6HoFTT3cHz9e+0w5VoiCZafA5XegpxjzXL1bX///+2xZhdfxVd
        fxVegBdihRigtXb///////+htndihRhegBdegBdYfAqZr276+/n+/v2itntYewtcfhRcfxRfgRiywpP8
        /Pr7/PmWrWtXewtcfhRegBdegBdafQ9cfxW3xZr///+wwI9ZfBBegBdihRigtXb///////+htndihRhe
        gBdZfA2MpFv4+vb///+0w5RYewtdfxZdfxVegBfAzab////9/fyWrGtWegpegBZegBdegBdegBdegBdc
        fxRbfRLE0Kv///+Ppl9Yew1ihRigtXb///////+htndihRhbfhJtjC7q7uL////f5dFjhCBcfxRegBdZ
        fA6uvoz///////+6yJ5Yew1egBZegBdegBdegBdegBdegBdegBdafRBriivu8ebj6NdjhCFghBWgtXb/
        //////+htndihhdYew22xJf////+//6Uq2dXewtegBdafA6Bm0z5+/f////s8ORriixbfhJegBdegBdd
        fxZegBdegBdegBdegBdegBdXegq4x5v///+RqGRcgQ2gtXb///////+htndfgxRvjDDv8+r////j6Ndj
        hCBcfxVegBdbfRDI07H///////+3xplXegpegBdegBdggRllhSJefxZegBdegBdegBdegBdXewuYrm3/
        ///AzKVcgQ2htXb///////+htndcgA2Zrm////////+0w5VXegpegBdbfhJwjjX09u/////+/v6Lo1lZ
        fA5egBdbfhR3lD6XrWxZfA5egBdegBdegBdegBdXewuWrGr////e5M9jhxqgtHX///////+htndcgQ2/
        zKX///////+Zrm1XewtegBdZfA2Ppl/////////5+vd3kzxbfhBegBdYfA6Opl/N17dafhBegBZegBde
        gBdegBZWeQi6yZ7////k6tpmiR+ftHP///////+htndhhRfY4Mj///////+RqGFYew1egBdYewugs3j/
        ///////3+fVzkTlbfhJegBdYfA2Pp1/7/PmNpFtUeAZZfA5YfA1WegiMo1r19/H////Z4chhhRigtHX/
        //////+gtXRmiB7i6Nf///////+SqWRYew1egBdYewucsHL////////8/Pp+mUZafQ9egBdbfRB9mEb+
        /v3x9Oykt31/mkmHoFS0w5X2+PP///////+2xJdbgA2gtXb///////+gtXRliB3h59T///////+fs3dX
        egpegBdafQ+Am0v8/fv///////+kt31WeghegBddgBZfgRjV3cP////////9/fz////////////////2
        +PJ6lUBfgxGgtXb///////+htndghBXV3cT///////+8yqBYewtegBddfxZhghzb4sv////////m69xq
        iitZfA1egBdafQ94lD3n7N3////////////////////2+POXrmxZfA5ihRigtXb///////+htndcgA27
        yZ/////////g59Nigx1dfxVegBdZfA6Jolj7/Pn////////X38V2kjtafBBYewtTeAJxjzW5x5zd487p
        7uHd5M65x5x9mEZafQ9egBdihRigtXb///////+htndcgQ2Uq2j////////8/fuJolhYewtegBdegBda
        fBCcsHP2+PP////////19/HP2bu8yqDF0a3AzaZtjC9egBdlhiNgghtYfA1afQ9egBdegBdihRigtXb/
        //////+htndfhBRqiSvs7+T////////U3cNegBddfxVegBdegBZZfA59mEbCzqju8ef7/Pr////4+fbK
        1LR5lT5bfhJdfxZdfxVdgBZegBdegBdegBdegBdihRigtXb///////+htndihRhYewuwwI7/////////
        //+svIhXegpdfxZegBdegBdafQ9afQ9qiSp9mEZ/mkpujTFbfRBbfhBdfxVbfRBdfxVegBdegBdegBde
        gBdegBdihRigtXb///////+htndihRhcfhJsiy3r7+L////////7/PqluH9afBBafRBegBdegBdegBdc
        fxRafQ9ZfBBcfhRegBdafRBmhyV5lD5khSFafhBegBdegBdegBdegBdihRigtXb///////+htndihRhe
        gBdYew2WrGr+/v7////////////Cz6lxjzVXewtZfA5cfxVegBZegBdegBdegBdafRCCnE3k6dn7/Pnd
        5M55lT5bfhBegBdegBdegBdihRigtXb///////+htndihRhegBdegBZafRC0w5b////////////////w
        8+q5x5yEnk9mhiRafhBcfxRegBddfxZegBfW3sT////////////I07FafRBegBdegBdegBdihRigtXb/
        //////+htndihRhegBdegBdcfxVegBa4x5v////////////////////+/v3m69zO2Ll5lUBbfRBdfxZi
        gx/k6dn////////////Z4cldfxZegBdegBdegBdihRigtXb///////+htndihRhegBdegBdegBdcfxVb
        fhSgs3jz9e7///////////////////////+Qp2FYew1egBdZfBCsvYr////////+/v6fs3ZZfA5egBde
        gBdegBdihRigtXb///////+gtXRihRhegBdegBdegBdegBddfxZYewt1kzy+y6Ty9e3/////////////
        //+SqWVYew1egBddfxZfgRiYrW63xZmSqWRdfxZdgBZegBdegBdegBdihRiftHP///////+pvINjhxde
        gBdegBdegBdegBdegBdegBdafRBZfA5zkDeesnXF0a3h59Ts8OSPpl9Yew1egBdegBddfxZYew1XewtZ
        fA5dfxZegBdegBdegBdegBdjhxenuX7////////j6NVykTJjhxlihRhihRhihRhihRhihRhihRhihRhf
        gxNcgAtegg5liB1ujyxoiiFhhRdihRhihRhihRhihRhihhlihRhihRhihRhihRhihRhjhxlwjy7g59L/
        ///////////j6devwoqkuHqluXyluXyluXyluXyluXyluXyluXyluX2luX2kuHujt3ikuHuluX2luXyl
        uXyluXyluXyluXyluXyluXyluXyluXykt3quwIjh59T/////////////////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        ////////////////////////wAAAA4AAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAA
        AAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAA
        AAGAAAABgAAAAYAAAAHAAAAD/////w==
</value>
  </data>
</root>